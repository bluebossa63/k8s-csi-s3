---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-s3-driver
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-s3-driver
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "update"]
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-s3-driver
subjects:
  - kind: ServiceAccount
    name: csi-s3-driver
    namespace: default
roleRef:
  kind: ClusterRole
  name: csi-s3-driver
  apiGroup: rbac.authorization.k8s.io
---
kind: DaemonSet
apiVersion: apps/v1beta2
metadata:
  name: csi-s3-driver
spec:
  selector:
    matchLabels:
      app: csi-s3-driver
  template:
    metadata:
      labels:
        app: csi-s3-driver
    spec:
      serviceAccount: csi-s3-driver
      hostNetwork: true
      containers:
        - name: driver-registrar
          image: quay.io/k8scsi/driver-registrar:v0.2.0
          args:
            - "--v=4"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
        - name: csi-s3-driver
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          image: ctrox/csi-s3-driver:0.2.0
          args:
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--nodeid=$(NODE_ID)"
            - "--access-key-id=$(ACCESS_KEY_ID)"
            - "--secret-access-key=$(SECRET_ACCESS_KEY)"
            - "--s3-endpoint=$(S3_ENDPOINT)"
            - "--region=$(REGION)"
            - "--mounter=$(MOUNTER)"
            - "--encryption-key=$(ENCRYPTION_KEY)"
            - "--v=4"
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: csi-s3-secret
                  key: accessKeyID
            - name: SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: csi-s3-secret
                  key: secretAccessKey
            - name: S3_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: csi-s3-secret
                  key: endpoint
            - name: REGION
              valueFrom:
                secretKeyRef:
                  name: csi-s3-secret
                  key: region
            - name: MOUNTER
              valueFrom:
                secretKeyRef:
                  name: csi-s3-secret
                  key: mounter
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: csi-s3-secret
                  key: encryptionKey
          imagePullPolicy: "Always"
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: pods-mount-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: "Bidirectional"
            - name: fuse-device
              mountPath: /dev/fuse
      volumes:
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/ch.ctrox.csi.s3-driver
            type: DirectoryOrCreate
        - name: pods-mount-dir
          hostPath:
            path: /var/lib/kubelet/pods
            type: Directory
        - name: fuse-device
          hostPath:
            path: /dev/fuse
